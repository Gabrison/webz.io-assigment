<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@1520.v56d65e3b_4566">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@2.2255.v56a_15e805f12"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@2.2255.v56a_15e805f12">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
      <triggers>
        <hudson.triggers.TimerTrigger>
          <spec>     H/5 * * * *</spec>
        </hudson.triggers.TimerTrigger>
      </triggers>
    </org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@4106.v7a_8a_8176d450">
    <script>pipeline {
    agent any
    environment {
        FLOATING_IP = &quot;172.28.1.100&quot;
        LOG_FILE = &quot;/var/log/webz/active_node_ssh_log.txt&quot;
    }
    stages {
        stage(&apos;Get Active Node via SSH&apos;) {
            steps {
                withCredentials([usernamePassword(credentialsId: &apos;cluster-ssh&apos;, usernameVariable: &apos;SSH_USER&apos;, passwordVariable: &apos;SSH_PASS&apos;)]) {
                    script {
                        // SSH to the floating IP and get the hostname
                        def hostname = sh(
                            script: &apos;sshpass -p &quot;$SSH_PASS&quot; ssh -o StrictHostKeyChecking=no $SSH_USER@$FLOATING_IP &quot;hostname&quot;&apos;,
                            returnStdout: true
                        ).trim()
                        // Log the result with timestamp
                        sh &apos;echo &quot;$(date) - &apos; + hostname + &apos;&quot; &gt;&gt; $LOG_FILE&apos;
                        // Show the log in Jenkins output
                        sh &apos;cat $LOG_FILE&apos;
                    }
                }
            }
        }
    }
}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>